{"version":3,"sources":["components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","contactChek","contacts","props","namesIn","reduce","acc","contact","numbersIn","includes","alert","handleSubmit","preventDefault","onSubmit","this","className","style","form","label","type","placeholder","onChange","input","button","Component","ContactList","onDeleteContact","map","id","item","onClick","Filter","App","filter","addContact","uuidv4","changeFilter","event","getVisibleContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.020ea9a1.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    contactChek = () => {\r\n        const { name, number } = this.state;\r\n        const { contacts } = this.props;\r\n        const namesIn = contacts.reduce(\r\n            (acc, contact) => [...acc, contact.name],\r\n            [],\r\n        );\r\n        const numbersIn = contacts.reduce(\r\n            (acc, contact) => [...acc, contact.number],\r\n            [],\r\n        );\r\n\r\n        if (namesIn.includes(name) || numbersIn.includes(number)) {\r\n            alert(`${name}${number} is already in contacts`);\r\n        }\r\n\r\n        if (name === '' || number === '') {\r\n            alert('Enter all data, please');\r\n        }\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { name, number } = this.state;\r\n\r\n        e.preventDefault();\r\n        this.setState({ name: '', number: '' });\r\n        if (this.contactChek()) {\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(name, number);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={style.form}>\r\n                <label className={style.label}>\r\n                    Name:\r\n          <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        placeholder=\"enter name\"\r\n                        onChange={this.handleChange}\r\n                        className={style.input}\r\n                    />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                    Number:\r\n          <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        placeholder=\"enter number\"\r\n                        onChange={this.handleChange}\r\n                        className={style.input}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={style.button}>\r\n                    Add contact\r\n        </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul >\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={style.item}>\r\n                    <p >\r\n                        {name}: {number}\r\n                    </p>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => onDeleteContact(id)}\r\n                        className={style.button}\r\n                    >\r\n                        Delete\r\n          </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n};","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n    };\r\n\r\n    addContact = (name, number) => {\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [contact, ...contacts],\r\n        }));\r\n    };\r\n\r\n    changeFilter = event => {\r\n        this.setState({ filter: event.currentTarget.value });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { filter, contacts } = this.state;\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n        }));\r\n    };\r\n\r\n    componentDidMount() {\r\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n        if (parsedContacts) {\r\n            this.setState({ contacts: parsedContacts });\r\n        };\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { filter, contacts } = this.state;\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return (\r\n            <>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onSubmit={this.addContact} contacts={contacts} />\r\n                <h2>Contacts</h2>\r\n                <Filter value={filter} onChange={this.changeFilter} />\r\n                <ContactList\r\n                    contacts={visibleContacts}\r\n                    onDeleteContact={this.deleteContact}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1MV3q\",\"label\":\"ContactForm_label__1V3Z4\",\"input\":\"ContactForm_input__1942p\",\"button\":\"ContactForm_button__1wLDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3gIPO\",\"button\":\"ContactList_button__FJeob\"};"],"sourceRoot":""}